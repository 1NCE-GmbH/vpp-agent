// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc.proto

package rpc

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import interfaces1 "github.com/ligato/vpp-agent/plugins/linux/model/interfaces"
import l31 "github.com/ligato/vpp-agent/plugins/linux/model/l3"
import acl "github.com/ligato/vpp-agent/plugins/vpp/model/acl"
import bfd "github.com/ligato/vpp-agent/plugins/vpp/model/bfd"
import interfaces "github.com/ligato/vpp-agent/plugins/vpp/model/interfaces"
import ipsec "github.com/ligato/vpp-agent/plugins/vpp/model/ipsec"
import l2 "github.com/ligato/vpp-agent/plugins/vpp/model/l2"
import l3 "github.com/ligato/vpp-agent/plugins/vpp/model/l3"
import l4 "github.com/ligato/vpp-agent/plugins/vpp/model/l4"
import nat "github.com/ligato/vpp-agent/plugins/vpp/model/nat"
import stn "github.com/ligato/vpp-agent/plugins/vpp/model/stn"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Data request is an inventory of supported data types with one or multiple
// items of every type. Universal type for every data change/resync request
type DataRequest struct {
	// vppplugin
	AccessLists           []*acl.AccessLists_Acl                 `protobuf:"bytes,10,rep,name=AccessLists,json=accessLists" json:"AccessLists,omitempty"`
	Interfaces            []*interfaces.Interfaces_Interface     `protobuf:"bytes,20,rep,name=Interfaces,json=interfaces" json:"Interfaces,omitempty"`
	SPDs                  []*ipsec.SecurityPolicyDatabases_SPD   `protobuf:"bytes,21,rep,name=SPDs,json=sPDs" json:"SPDs,omitempty"`
	SAs                   []*ipsec.SecurityAssociations_SA       `protobuf:"bytes,22,rep,name=SAs,json=sAs" json:"SAs,omitempty"`
	Tunnels               []*ipsec.TunnelInterfaces_Tunnel       `protobuf:"bytes,23,rep,name=Tunnels,json=tunnels" json:"Tunnels,omitempty"`
	BfdSessions           []*bfd.SingleHopBFD_Session            `protobuf:"bytes,30,rep,name=BfdSessions,json=bfdSessions" json:"BfdSessions,omitempty"`
	BfdAuthKeys           []*bfd.SingleHopBFD_Key                `protobuf:"bytes,31,rep,name=BfdAuthKeys,json=bfdAuthKeys" json:"BfdAuthKeys,omitempty"`
	BfdEchoFunction       *bfd.SingleHopBFD_EchoFunction         `protobuf:"bytes,32,opt,name=BfdEchoFunction,json=bfdEchoFunction" json:"BfdEchoFunction,omitempty"`
	BridgeDomains         []*l2.BridgeDomains_BridgeDomain       `protobuf:"bytes,40,rep,name=BridgeDomains,json=bridgeDomains" json:"BridgeDomains,omitempty"`
	FIBs                  []*l2.FibTable_FibEntry                `protobuf:"bytes,41,rep,name=FIBs,json=fIBs" json:"FIBs,omitempty"`
	XCons                 []*l2.XConnectPairs_XConnectPair       `protobuf:"bytes,42,rep,name=XCons,json=xCons" json:"XCons,omitempty"`
	StaticRoutes          []*l3.StaticRoutes_Route               `protobuf:"bytes,50,rep,name=StaticRoutes,json=staticRoutes" json:"StaticRoutes,omitempty"`
	ArpEntries            []*l3.ArpTable_ArpEntry                `protobuf:"bytes,51,rep,name=ArpEntries,json=arpEntries" json:"ArpEntries,omitempty"`
	ProxyArpInterfaces    []*l3.ProxyArpInterfaces_InterfaceList `protobuf:"bytes,52,rep,name=ProxyArpInterfaces,json=proxyArpInterfaces" json:"ProxyArpInterfaces,omitempty"`
	ProxyArpRanges        []*l3.ProxyArpRanges_RangeList         `protobuf:"bytes,53,rep,name=ProxyArpRanges,json=proxyArpRanges" json:"ProxyArpRanges,omitempty"`
	L4Feature             *l4.L4Features                         `protobuf:"bytes,60,opt,name=L4Feature,json=l4Feature" json:"L4Feature,omitempty"`
	ApplicationNamespaces []*l4.AppNamespaces_AppNamespace       `protobuf:"bytes,61,rep,name=ApplicationNamespaces,json=applicationNamespaces" json:"ApplicationNamespaces,omitempty"`
	StnRules              []*stn.STN_Rule                        `protobuf:"bytes,70,rep,name=StnRules,json=stnRules" json:"StnRules,omitempty"`
	NatGlobal             *nat.Nat44Global                       `protobuf:"bytes,71,opt,name=NatGlobal,json=natGlobal" json:"NatGlobal,omitempty"`
	DNATs                 []*nat.Nat44DNat_DNatConfig            `protobuf:"bytes,72,rep,name=DNATs,json=dNATs" json:"DNATs,omitempty"`
	// Linuxplugin
	LinuxInterfaces      []*interfaces1.LinuxInterfaces_Interface `protobuf:"bytes,80,rep,name=LinuxInterfaces,json=linuxInterfaces" json:"LinuxInterfaces,omitempty"`
	LinuxArpEntries      []*l31.LinuxStaticArpEntries_ArpEntry    `protobuf:"bytes,90,rep,name=LinuxArpEntries,json=linuxArpEntries" json:"LinuxArpEntries,omitempty"`
	LinuxRoutes          []*l31.LinuxStaticRoutes_Route           `protobuf:"bytes,91,rep,name=LinuxRoutes,json=linuxRoutes" json:"LinuxRoutes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{0}
}
func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (dst *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(dst, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetAccessLists() []*acl.AccessLists_Acl {
	if m != nil {
		return m.AccessLists
	}
	return nil
}

func (m *DataRequest) GetInterfaces() []*interfaces.Interfaces_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *DataRequest) GetSPDs() []*ipsec.SecurityPolicyDatabases_SPD {
	if m != nil {
		return m.SPDs
	}
	return nil
}

func (m *DataRequest) GetSAs() []*ipsec.SecurityAssociations_SA {
	if m != nil {
		return m.SAs
	}
	return nil
}

func (m *DataRequest) GetTunnels() []*ipsec.TunnelInterfaces_Tunnel {
	if m != nil {
		return m.Tunnels
	}
	return nil
}

func (m *DataRequest) GetBfdSessions() []*bfd.SingleHopBFD_Session {
	if m != nil {
		return m.BfdSessions
	}
	return nil
}

func (m *DataRequest) GetBfdAuthKeys() []*bfd.SingleHopBFD_Key {
	if m != nil {
		return m.BfdAuthKeys
	}
	return nil
}

func (m *DataRequest) GetBfdEchoFunction() *bfd.SingleHopBFD_EchoFunction {
	if m != nil {
		return m.BfdEchoFunction
	}
	return nil
}

func (m *DataRequest) GetBridgeDomains() []*l2.BridgeDomains_BridgeDomain {
	if m != nil {
		return m.BridgeDomains
	}
	return nil
}

func (m *DataRequest) GetFIBs() []*l2.FibTable_FibEntry {
	if m != nil {
		return m.FIBs
	}
	return nil
}

func (m *DataRequest) GetXCons() []*l2.XConnectPairs_XConnectPair {
	if m != nil {
		return m.XCons
	}
	return nil
}

func (m *DataRequest) GetStaticRoutes() []*l3.StaticRoutes_Route {
	if m != nil {
		return m.StaticRoutes
	}
	return nil
}

func (m *DataRequest) GetArpEntries() []*l3.ArpTable_ArpEntry {
	if m != nil {
		return m.ArpEntries
	}
	return nil
}

func (m *DataRequest) GetProxyArpInterfaces() []*l3.ProxyArpInterfaces_InterfaceList {
	if m != nil {
		return m.ProxyArpInterfaces
	}
	return nil
}

func (m *DataRequest) GetProxyArpRanges() []*l3.ProxyArpRanges_RangeList {
	if m != nil {
		return m.ProxyArpRanges
	}
	return nil
}

func (m *DataRequest) GetL4Feature() *l4.L4Features {
	if m != nil {
		return m.L4Feature
	}
	return nil
}

func (m *DataRequest) GetApplicationNamespaces() []*l4.AppNamespaces_AppNamespace {
	if m != nil {
		return m.ApplicationNamespaces
	}
	return nil
}

func (m *DataRequest) GetStnRules() []*stn.STN_Rule {
	if m != nil {
		return m.StnRules
	}
	return nil
}

func (m *DataRequest) GetNatGlobal() *nat.Nat44Global {
	if m != nil {
		return m.NatGlobal
	}
	return nil
}

func (m *DataRequest) GetDNATs() []*nat.Nat44DNat_DNatConfig {
	if m != nil {
		return m.DNATs
	}
	return nil
}

func (m *DataRequest) GetLinuxInterfaces() []*interfaces1.LinuxInterfaces_Interface {
	if m != nil {
		return m.LinuxInterfaces
	}
	return nil
}

func (m *DataRequest) GetLinuxArpEntries() []*l31.LinuxStaticArpEntries_ArpEntry {
	if m != nil {
		return m.LinuxArpEntries
	}
	return nil
}

func (m *DataRequest) GetLinuxRoutes() []*l31.LinuxStaticRoutes_Route {
	if m != nil {
		return m.LinuxRoutes
	}
	return nil
}

// NotificationRequest represent a notification request which contains index of next required
// message
type NotificationRequest struct {
	Idx                  uint32   `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationRequest) Reset()         { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string { return proto.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()    {}
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{1}
}
func (m *NotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationRequest.Unmarshal(m, b)
}
func (m *NotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationRequest.Marshal(b, m, deterministic)
}
func (dst *NotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationRequest.Merge(dst, src)
}
func (m *NotificationRequest) XXX_Size() int {
	return xxx_messageInfo_NotificationRequest.Size(m)
}
func (m *NotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationRequest proto.InternalMessageInfo

func (m *NotificationRequest) GetIdx() uint32 {
	if m != nil {
		return m.Idx
	}
	return 0
}

// GetRequest represents a request to read data from the VPP
type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{2}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

// Response to data change 'put'
type PutResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{3}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (dst *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(dst, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

// Response to data change 'del'
type DelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelResponse) Reset()         { *m = DelResponse{} }
func (m *DelResponse) String() string { return proto.CompactTextString(m) }
func (*DelResponse) ProtoMessage()    {}
func (*DelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{4}
}
func (m *DelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelResponse.Unmarshal(m, b)
}
func (m *DelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelResponse.Marshal(b, m, deterministic)
}
func (dst *DelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelResponse.Merge(dst, src)
}
func (m *DelResponse) XXX_Size() int {
	return xxx_messageInfo_DelResponse.Size(m)
}
func (m *DelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelResponse proto.InternalMessageInfo

// Response to data resync
type ResyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResyncResponse) Reset()         { *m = ResyncResponse{} }
func (m *ResyncResponse) String() string { return proto.CompactTextString(m) }
func (*ResyncResponse) ProtoMessage()    {}
func (*ResyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{5}
}
func (m *ResyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResyncResponse.Unmarshal(m, b)
}
func (m *ResyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResyncResponse.Marshal(b, m, deterministic)
}
func (dst *ResyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResyncResponse.Merge(dst, src)
}
func (m *ResyncResponse) XXX_Size() int {
	return xxx_messageInfo_ResyncResponse.Size(m)
}
func (m *ResyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResyncResponse proto.InternalMessageInfo

// AclResponse is response to 'get' all the access lists
type AclResponse struct {
	AccessLists          []*acl.AccessLists_Acl `protobuf:"bytes,1,rep,name=AccessLists,json=accessLists" json:"AccessLists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AclResponse) Reset()         { *m = AclResponse{} }
func (m *AclResponse) String() string { return proto.CompactTextString(m) }
func (*AclResponse) ProtoMessage()    {}
func (*AclResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{6}
}
func (m *AclResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AclResponse.Unmarshal(m, b)
}
func (m *AclResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AclResponse.Marshal(b, m, deterministic)
}
func (dst *AclResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AclResponse.Merge(dst, src)
}
func (m *AclResponse) XXX_Size() int {
	return xxx_messageInfo_AclResponse.Size(m)
}
func (m *AclResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AclResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AclResponse proto.InternalMessageInfo

func (m *AclResponse) GetAccessLists() []*acl.AccessLists_Acl {
	if m != nil {
		return m.AccessLists
	}
	return nil
}

// InterfaceResponse is response to 'get' all the interfaces
type InterfaceResponse struct {
	Interfaces           []*interfaces.Interfaces_Interface `protobuf:"bytes,1,rep,name=Interfaces,json=interfaces" json:"Interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *InterfaceResponse) Reset()         { *m = InterfaceResponse{} }
func (m *InterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*InterfaceResponse) ProtoMessage()    {}
func (*InterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{7}
}
func (m *InterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceResponse.Unmarshal(m, b)
}
func (m *InterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceResponse.Marshal(b, m, deterministic)
}
func (dst *InterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceResponse.Merge(dst, src)
}
func (m *InterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_InterfaceResponse.Size(m)
}
func (m *InterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceResponse proto.InternalMessageInfo

func (m *InterfaceResponse) GetInterfaces() []*interfaces.Interfaces_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

// IPSecSPDResponse is response to 'get' all the IPSec SPDs
type IPSecSPDResponse struct {
	SPDs                 []*ipsec.SecurityPolicyDatabases_SPD `protobuf:"bytes,1,rep,name=SPDs,json=sPDs" json:"SPDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *IPSecSPDResponse) Reset()         { *m = IPSecSPDResponse{} }
func (m *IPSecSPDResponse) String() string { return proto.CompactTextString(m) }
func (*IPSecSPDResponse) ProtoMessage()    {}
func (*IPSecSPDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{8}
}
func (m *IPSecSPDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSecSPDResponse.Unmarshal(m, b)
}
func (m *IPSecSPDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSecSPDResponse.Marshal(b, m, deterministic)
}
func (dst *IPSecSPDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSecSPDResponse.Merge(dst, src)
}
func (m *IPSecSPDResponse) XXX_Size() int {
	return xxx_messageInfo_IPSecSPDResponse.Size(m)
}
func (m *IPSecSPDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSecSPDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IPSecSPDResponse proto.InternalMessageInfo

func (m *IPSecSPDResponse) GetSPDs() []*ipsec.SecurityPolicyDatabases_SPD {
	if m != nil {
		return m.SPDs
	}
	return nil
}

// IPSecSAResponse is response to 'get' all the IPSec SPDs
type IPSecSAResponse struct {
	SAa                  []*ipsec.SecurityAssociations_SA `protobuf:"bytes,1,rep,name=SAa,json=sAa" json:"SAa,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *IPSecSAResponse) Reset()         { *m = IPSecSAResponse{} }
func (m *IPSecSAResponse) String() string { return proto.CompactTextString(m) }
func (*IPSecSAResponse) ProtoMessage()    {}
func (*IPSecSAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{9}
}
func (m *IPSecSAResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSecSAResponse.Unmarshal(m, b)
}
func (m *IPSecSAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSecSAResponse.Marshal(b, m, deterministic)
}
func (dst *IPSecSAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSecSAResponse.Merge(dst, src)
}
func (m *IPSecSAResponse) XXX_Size() int {
	return xxx_messageInfo_IPSecSAResponse.Size(m)
}
func (m *IPSecSAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSecSAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IPSecSAResponse proto.InternalMessageInfo

func (m *IPSecSAResponse) GetSAa() []*ipsec.SecurityAssociations_SA {
	if m != nil {
		return m.SAa
	}
	return nil
}

// IPSecTunnelResponse is response to 'get' all the IPSec tunnels
type IPSecTunnelResponse struct {
	Tunnels              []*ipsec.TunnelInterfaces_Tunnel `protobuf:"bytes,1,rep,name=Tunnels,json=tunnels" json:"Tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *IPSecTunnelResponse) Reset()         { *m = IPSecTunnelResponse{} }
func (m *IPSecTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*IPSecTunnelResponse) ProtoMessage()    {}
func (*IPSecTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{10}
}
func (m *IPSecTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSecTunnelResponse.Unmarshal(m, b)
}
func (m *IPSecTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSecTunnelResponse.Marshal(b, m, deterministic)
}
func (dst *IPSecTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSecTunnelResponse.Merge(dst, src)
}
func (m *IPSecTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_IPSecTunnelResponse.Size(m)
}
func (m *IPSecTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSecTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IPSecTunnelResponse proto.InternalMessageInfo

func (m *IPSecTunnelResponse) GetTunnels() []*ipsec.TunnelInterfaces_Tunnel {
	if m != nil {
		return m.Tunnels
	}
	return nil
}

// BDResponse is response to 'get' the bridge domains
type BDResponse struct {
	BridgeDomains        []*l2.BridgeDomains_BridgeDomain `protobuf:"bytes,1,rep,name=BridgeDomains,json=bridgeDomains" json:"BridgeDomains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *BDResponse) Reset()         { *m = BDResponse{} }
func (m *BDResponse) String() string { return proto.CompactTextString(m) }
func (*BDResponse) ProtoMessage()    {}
func (*BDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{11}
}
func (m *BDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BDResponse.Unmarshal(m, b)
}
func (m *BDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BDResponse.Marshal(b, m, deterministic)
}
func (dst *BDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BDResponse.Merge(dst, src)
}
func (m *BDResponse) XXX_Size() int {
	return xxx_messageInfo_BDResponse.Size(m)
}
func (m *BDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BDResponse proto.InternalMessageInfo

func (m *BDResponse) GetBridgeDomains() []*l2.BridgeDomains_BridgeDomain {
	if m != nil {
		return m.BridgeDomains
	}
	return nil
}

// FibResponse is response to 'get' the l2 FIBs
type FibResponse struct {
	FIBs                 []*l2.FibTable_FibEntry `protobuf:"bytes,1,rep,name=FIBs,json=fIBs" json:"FIBs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FibResponse) Reset()         { *m = FibResponse{} }
func (m *FibResponse) String() string { return proto.CompactTextString(m) }
func (*FibResponse) ProtoMessage()    {}
func (*FibResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{12}
}
func (m *FibResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibResponse.Unmarshal(m, b)
}
func (m *FibResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibResponse.Marshal(b, m, deterministic)
}
func (dst *FibResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibResponse.Merge(dst, src)
}
func (m *FibResponse) XXX_Size() int {
	return xxx_messageInfo_FibResponse.Size(m)
}
func (m *FibResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FibResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FibResponse proto.InternalMessageInfo

func (m *FibResponse) GetFIBs() []*l2.FibTable_FibEntry {
	if m != nil {
		return m.FIBs
	}
	return nil
}

// XcResponse is response to 'get' the l2 cross connects
type XcResponse struct {
	XCons                []*l2.XConnectPairs_XConnectPair `protobuf:"bytes,1,rep,name=XCons,json=xCons" json:"XCons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *XcResponse) Reset()         { *m = XcResponse{} }
func (m *XcResponse) String() string { return proto.CompactTextString(m) }
func (*XcResponse) ProtoMessage()    {}
func (*XcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{13}
}
func (m *XcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XcResponse.Unmarshal(m, b)
}
func (m *XcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XcResponse.Marshal(b, m, deterministic)
}
func (dst *XcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XcResponse.Merge(dst, src)
}
func (m *XcResponse) XXX_Size() int {
	return xxx_messageInfo_XcResponse.Size(m)
}
func (m *XcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_XcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_XcResponse proto.InternalMessageInfo

func (m *XcResponse) GetXCons() []*l2.XConnectPairs_XConnectPair {
	if m != nil {
		return m.XCons
	}
	return nil
}

// RoutesResponse is response to 'get' the l3 routes
type RoutesResponse struct {
	StaticRoutes         []*l3.StaticRoutes_Route `protobuf:"bytes,1,rep,name=StaticRoutes,json=staticRoutes" json:"StaticRoutes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RoutesResponse) Reset()         { *m = RoutesResponse{} }
func (m *RoutesResponse) String() string { return proto.CompactTextString(m) }
func (*RoutesResponse) ProtoMessage()    {}
func (*RoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{14}
}
func (m *RoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutesResponse.Unmarshal(m, b)
}
func (m *RoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutesResponse.Marshal(b, m, deterministic)
}
func (dst *RoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutesResponse.Merge(dst, src)
}
func (m *RoutesResponse) XXX_Size() int {
	return xxx_messageInfo_RoutesResponse.Size(m)
}
func (m *RoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoutesResponse proto.InternalMessageInfo

func (m *RoutesResponse) GetStaticRoutes() []*l3.StaticRoutes_Route {
	if m != nil {
		return m.StaticRoutes
	}
	return nil
}

// ARPsResponse is response to 'get' the l3 ARPs
type ARPsResponse struct {
	ArpEntries           []*l3.ArpTable_ArpEntry `protobuf:"bytes,1,rep,name=ArpEntries,json=arpEntries" json:"ArpEntries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ARPsResponse) Reset()         { *m = ARPsResponse{} }
func (m *ARPsResponse) String() string { return proto.CompactTextString(m) }
func (*ARPsResponse) ProtoMessage()    {}
func (*ARPsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{15}
}
func (m *ARPsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ARPsResponse.Unmarshal(m, b)
}
func (m *ARPsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ARPsResponse.Marshal(b, m, deterministic)
}
func (dst *ARPsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ARPsResponse.Merge(dst, src)
}
func (m *ARPsResponse) XXX_Size() int {
	return xxx_messageInfo_ARPsResponse.Size(m)
}
func (m *ARPsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ARPsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ARPsResponse proto.InternalMessageInfo

func (m *ARPsResponse) GetArpEntries() []*l3.ArpTable_ArpEntry {
	if m != nil {
		return m.ArpEntries
	}
	return nil
}

// LinuxInterfaceResponse is response to 'get' all the linux interfaces
type LinuxInterfaceResponse struct {
	LinuxInterfaces      []*interfaces1.LinuxInterfaces_Interface `protobuf:"bytes,1,rep,name=LinuxInterfaces,json=linuxInterfaces" json:"LinuxInterfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *LinuxInterfaceResponse) Reset()         { *m = LinuxInterfaceResponse{} }
func (m *LinuxInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*LinuxInterfaceResponse) ProtoMessage()    {}
func (*LinuxInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{16}
}
func (m *LinuxInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxInterfaceResponse.Unmarshal(m, b)
}
func (m *LinuxInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxInterfaceResponse.Marshal(b, m, deterministic)
}
func (dst *LinuxInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxInterfaceResponse.Merge(dst, src)
}
func (m *LinuxInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_LinuxInterfaceResponse.Size(m)
}
func (m *LinuxInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxInterfaceResponse proto.InternalMessageInfo

func (m *LinuxInterfaceResponse) GetLinuxInterfaces() []*interfaces1.LinuxInterfaces_Interface {
	if m != nil {
		return m.LinuxInterfaces
	}
	return nil
}

// LinuxARPsResponse is response to 'get' the linux ARPs
type LinuxARPsResponse struct {
	LinuxArpEntries      []*l31.LinuxStaticArpEntries_ArpEntry `protobuf:"bytes,1,rep,name=LinuxArpEntries,json=linuxArpEntries" json:"LinuxArpEntries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *LinuxARPsResponse) Reset()         { *m = LinuxARPsResponse{} }
func (m *LinuxARPsResponse) String() string { return proto.CompactTextString(m) }
func (*LinuxARPsResponse) ProtoMessage()    {}
func (*LinuxARPsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{17}
}
func (m *LinuxARPsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxARPsResponse.Unmarshal(m, b)
}
func (m *LinuxARPsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxARPsResponse.Marshal(b, m, deterministic)
}
func (dst *LinuxARPsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxARPsResponse.Merge(dst, src)
}
func (m *LinuxARPsResponse) XXX_Size() int {
	return xxx_messageInfo_LinuxARPsResponse.Size(m)
}
func (m *LinuxARPsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxARPsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxARPsResponse proto.InternalMessageInfo

func (m *LinuxARPsResponse) GetLinuxArpEntries() []*l31.LinuxStaticArpEntries_ArpEntry {
	if m != nil {
		return m.LinuxArpEntries
	}
	return nil
}

// LinuxRoutesResponse is response to 'get' the linux routes
type LinuxRoutesResponse struct {
	LinuxRoutes          []*l31.LinuxStaticRoutes_Route `protobuf:"bytes,1,rep,name=LinuxRoutes,json=linuxRoutes" json:"LinuxRoutes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *LinuxRoutesResponse) Reset()         { *m = LinuxRoutesResponse{} }
func (m *LinuxRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*LinuxRoutesResponse) ProtoMessage()    {}
func (*LinuxRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{18}
}
func (m *LinuxRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinuxRoutesResponse.Unmarshal(m, b)
}
func (m *LinuxRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinuxRoutesResponse.Marshal(b, m, deterministic)
}
func (dst *LinuxRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinuxRoutesResponse.Merge(dst, src)
}
func (m *LinuxRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_LinuxRoutesResponse.Size(m)
}
func (m *LinuxRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LinuxRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LinuxRoutesResponse proto.InternalMessageInfo

func (m *LinuxRoutesResponse) GetLinuxRoutes() []*l31.LinuxStaticRoutes_Route {
	if m != nil {
		return m.LinuxRoutes
	}
	return nil
}

// Response to notification request 'get'. Returns indexed notification.
type NotificationsResponse struct {
	// Index of following notification
	NextIdx uint32 `protobuf:"varint,1,opt,name=nextIdx,proto3" json:"nextIdx,omitempty"`
	// Notification data
	NIf                  *interfaces.InterfaceNotification `protobuf:"bytes,2,opt,name=nIf" json:"nIf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *NotificationsResponse) Reset()         { *m = NotificationsResponse{} }
func (m *NotificationsResponse) String() string { return proto.CompactTextString(m) }
func (*NotificationsResponse) ProtoMessage()    {}
func (*NotificationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_670d3602f512c461, []int{19}
}
func (m *NotificationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationsResponse.Unmarshal(m, b)
}
func (m *NotificationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationsResponse.Marshal(b, m, deterministic)
}
func (dst *NotificationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationsResponse.Merge(dst, src)
}
func (m *NotificationsResponse) XXX_Size() int {
	return xxx_messageInfo_NotificationsResponse.Size(m)
}
func (m *NotificationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationsResponse proto.InternalMessageInfo

func (m *NotificationsResponse) GetNextIdx() uint32 {
	if m != nil {
		return m.NextIdx
	}
	return 0
}

func (m *NotificationsResponse) GetNIf() *interfaces.InterfaceNotification {
	if m != nil {
		return m.NIf
	}
	return nil
}

func init() {
	proto.RegisterType((*DataRequest)(nil), "rpc.DataRequest")
	proto.RegisterType((*NotificationRequest)(nil), "rpc.NotificationRequest")
	proto.RegisterType((*GetRequest)(nil), "rpc.GetRequest")
	proto.RegisterType((*PutResponse)(nil), "rpc.PutResponse")
	proto.RegisterType((*DelResponse)(nil), "rpc.DelResponse")
	proto.RegisterType((*ResyncResponse)(nil), "rpc.ResyncResponse")
	proto.RegisterType((*AclResponse)(nil), "rpc.AclResponse")
	proto.RegisterType((*InterfaceResponse)(nil), "rpc.InterfaceResponse")
	proto.RegisterType((*IPSecSPDResponse)(nil), "rpc.IPSecSPDResponse")
	proto.RegisterType((*IPSecSAResponse)(nil), "rpc.IPSecSAResponse")
	proto.RegisterType((*IPSecTunnelResponse)(nil), "rpc.IPSecTunnelResponse")
	proto.RegisterType((*BDResponse)(nil), "rpc.BDResponse")
	proto.RegisterType((*FibResponse)(nil), "rpc.FibResponse")
	proto.RegisterType((*XcResponse)(nil), "rpc.XcResponse")
	proto.RegisterType((*RoutesResponse)(nil), "rpc.RoutesResponse")
	proto.RegisterType((*ARPsResponse)(nil), "rpc.ARPsResponse")
	proto.RegisterType((*LinuxInterfaceResponse)(nil), "rpc.LinuxInterfaceResponse")
	proto.RegisterType((*LinuxARPsResponse)(nil), "rpc.LinuxARPsResponse")
	proto.RegisterType((*LinuxRoutesResponse)(nil), "rpc.LinuxRoutesResponse")
	proto.RegisterType((*NotificationsResponse)(nil), "rpc.NotificationsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataChangeService service

type DataChangeServiceClient interface {
	// Creates or updates one or multiple configuration items
	Put(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// Removes one or multiple configuration items
	Del(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DelResponse, error)
}

type dataChangeServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataChangeServiceClient(cc *grpc.ClientConn) DataChangeServiceClient {
	return &dataChangeServiceClient{cc}
}

func (c *dataChangeServiceClient) Put(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataChangeService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataChangeServiceClient) Del(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DelResponse, error) {
	out := new(DelResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataChangeService/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataChangeService service

type DataChangeServiceServer interface {
	// Creates or updates one or multiple configuration items
	Put(context.Context, *DataRequest) (*PutResponse, error)
	// Removes one or multiple configuration items
	Del(context.Context, *DataRequest) (*DelResponse, error)
}

func RegisterDataChangeServiceServer(s *grpc.Server, srv DataChangeServiceServer) {
	s.RegisterService(&_DataChangeService_serviceDesc, srv)
}

func _DataChangeService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataChangeServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataChangeService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataChangeServiceServer).Put(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataChangeService_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataChangeServiceServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataChangeService/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataChangeServiceServer).Del(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataChangeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.DataChangeService",
	HandlerType: (*DataChangeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _DataChangeService_Put_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _DataChangeService_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// Client API for DataResyncService service

type DataResyncServiceClient interface {
	// Calls vpp-agent resync
	Resync(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*ResyncResponse, error)
}

type dataResyncServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataResyncServiceClient(cc *grpc.ClientConn) DataResyncServiceClient {
	return &dataResyncServiceClient{cc}
}

func (c *dataResyncServiceClient) Resync(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*ResyncResponse, error) {
	out := new(ResyncResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataResyncService/Resync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataResyncService service

type DataResyncServiceServer interface {
	// Calls vpp-agent resync
	Resync(context.Context, *DataRequest) (*ResyncResponse, error)
}

func RegisterDataResyncServiceServer(s *grpc.Server, srv DataResyncServiceServer) {
	s.RegisterService(&_DataResyncService_serviceDesc, srv)
}

func _DataResyncService_Resync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataResyncServiceServer).Resync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataResyncService/Resync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataResyncServiceServer).Resync(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataResyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.DataResyncService",
	HandlerType: (*DataResyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resync",
			Handler:    _DataResyncService_Resync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// Client API for DataGetService service

type DataGetServiceClient interface {
	GetAcls(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*AclResponse, error)
	GetInterfaces(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*InterfaceResponse, error)
	GetIPSecSPDs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecSPDResponse, error)
	GetIPSecSAs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecSAResponse, error)
	GetIPSecTunnels(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecTunnelResponse, error)
	GetBDs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*BDResponse, error)
	GetFIBs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*FibResponse, error)
	GetXConnects(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*XcResponse, error)
	GetRoutes(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*RoutesResponse, error)
	GetARPs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ARPsResponse, error)
	GetLinuxInterfaces(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxInterfaceResponse, error)
	GetLinuxARPs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxARPsResponse, error)
	GetLinuxRoutes(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxRoutesResponse, error)
}

type dataGetServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataGetServiceClient(cc *grpc.ClientConn) DataGetServiceClient {
	return &dataGetServiceClient{cc}
}

func (c *dataGetServiceClient) GetAcls(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*AclResponse, error) {
	out := new(AclResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetAcls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetInterfaces(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*InterfaceResponse, error) {
	out := new(InterfaceResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetInterfaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetIPSecSPDs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecSPDResponse, error) {
	out := new(IPSecSPDResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetIPSecSPDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetIPSecSAs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecSAResponse, error) {
	out := new(IPSecSAResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetIPSecSAs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetIPSecTunnels(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*IPSecTunnelResponse, error) {
	out := new(IPSecTunnelResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetIPSecTunnels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetBDs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*BDResponse, error) {
	out := new(BDResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetBDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetFIBs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*FibResponse, error) {
	out := new(FibResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetFIBs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetXConnects(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*XcResponse, error) {
	out := new(XcResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetXConnects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetRoutes(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*RoutesResponse, error) {
	out := new(RoutesResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetARPs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ARPsResponse, error) {
	out := new(ARPsResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetARPs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetLinuxInterfaces(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxInterfaceResponse, error) {
	out := new(LinuxInterfaceResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetLinuxInterfaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetLinuxARPs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxARPsResponse, error) {
	out := new(LinuxARPsResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetLinuxARPs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataGetServiceClient) GetLinuxRoutes(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*LinuxRoutesResponse, error) {
	out := new(LinuxRoutesResponse)
	err := c.cc.Invoke(ctx, "/rpc.DataGetService/GetLinuxRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataGetService service

type DataGetServiceServer interface {
	GetAcls(context.Context, *GetRequest) (*AclResponse, error)
	GetInterfaces(context.Context, *GetRequest) (*InterfaceResponse, error)
	GetIPSecSPDs(context.Context, *GetRequest) (*IPSecSPDResponse, error)
	GetIPSecSAs(context.Context, *GetRequest) (*IPSecSAResponse, error)
	GetIPSecTunnels(context.Context, *GetRequest) (*IPSecTunnelResponse, error)
	GetBDs(context.Context, *GetRequest) (*BDResponse, error)
	GetFIBs(context.Context, *GetRequest) (*FibResponse, error)
	GetXConnects(context.Context, *GetRequest) (*XcResponse, error)
	GetRoutes(context.Context, *GetRequest) (*RoutesResponse, error)
	GetARPs(context.Context, *GetRequest) (*ARPsResponse, error)
	GetLinuxInterfaces(context.Context, *GetRequest) (*LinuxInterfaceResponse, error)
	GetLinuxARPs(context.Context, *GetRequest) (*LinuxARPsResponse, error)
	GetLinuxRoutes(context.Context, *GetRequest) (*LinuxRoutesResponse, error)
}

func RegisterDataGetServiceServer(s *grpc.Server, srv DataGetServiceServer) {
	s.RegisterService(&_DataGetService_serviceDesc, srv)
}

func _DataGetService_GetAcls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetAcls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetAcls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetAcls(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetInterfaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetInterfaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetInterfaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetInterfaces(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetIPSecSPDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetIPSecSPDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetIPSecSPDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetIPSecSPDs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetIPSecSAs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetIPSecSAs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetIPSecSAs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetIPSecSAs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetIPSecTunnels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetIPSecTunnels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetIPSecTunnels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetIPSecTunnels(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetBDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetBDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetBDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetBDs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetFIBs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetFIBs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetFIBs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetFIBs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetXConnects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetXConnects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetXConnects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetXConnects(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetRoutes(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetARPs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetARPs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetARPs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetARPs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetLinuxInterfaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetLinuxInterfaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetLinuxInterfaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetLinuxInterfaces(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetLinuxARPs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetLinuxARPs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetLinuxARPs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetLinuxARPs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataGetService_GetLinuxRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataGetServiceServer).GetLinuxRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DataGetService/GetLinuxRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataGetServiceServer).GetLinuxRoutes(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataGetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.DataGetService",
	HandlerType: (*DataGetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAcls",
			Handler:    _DataGetService_GetAcls_Handler,
		},
		{
			MethodName: "GetInterfaces",
			Handler:    _DataGetService_GetInterfaces_Handler,
		},
		{
			MethodName: "GetIPSecSPDs",
			Handler:    _DataGetService_GetIPSecSPDs_Handler,
		},
		{
			MethodName: "GetIPSecSAs",
			Handler:    _DataGetService_GetIPSecSAs_Handler,
		},
		{
			MethodName: "GetIPSecTunnels",
			Handler:    _DataGetService_GetIPSecTunnels_Handler,
		},
		{
			MethodName: "GetBDs",
			Handler:    _DataGetService_GetBDs_Handler,
		},
		{
			MethodName: "GetFIBs",
			Handler:    _DataGetService_GetFIBs_Handler,
		},
		{
			MethodName: "GetXConnects",
			Handler:    _DataGetService_GetXConnects_Handler,
		},
		{
			MethodName: "GetRoutes",
			Handler:    _DataGetService_GetRoutes_Handler,
		},
		{
			MethodName: "GetARPs",
			Handler:    _DataGetService_GetARPs_Handler,
		},
		{
			MethodName: "GetLinuxInterfaces",
			Handler:    _DataGetService_GetLinuxInterfaces_Handler,
		},
		{
			MethodName: "GetLinuxARPs",
			Handler:    _DataGetService_GetLinuxARPs_Handler,
		},
		{
			MethodName: "GetLinuxRoutes",
			Handler:    _DataGetService_GetLinuxRoutes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// Client API for NotificationService service

type NotificationServiceClient interface {
	// Get notification stack
	Get(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (NotificationService_GetClient, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) Get(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (NotificationService_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NotificationService_serviceDesc.Streams[0], "/rpc.NotificationService/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &notificationServiceGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NotificationService_GetClient interface {
	Recv() (*NotificationsResponse, error)
	grpc.ClientStream
}

type notificationServiceGetClient struct {
	grpc.ClientStream
}

func (x *notificationServiceGetClient) Recv() (*NotificationsResponse, error) {
	m := new(NotificationsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for NotificationService service

type NotificationServiceServer interface {
	// Get notification stack
	Get(*NotificationRequest, NotificationService_GetServer) error
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NotificationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NotificationServiceServer).Get(m, &notificationServiceGetServer{stream})
}

type NotificationService_GetServer interface {
	Send(*NotificationsResponse) error
	grpc.ServerStream
}

type notificationServiceGetServer struct {
	grpc.ServerStream
}

func (x *notificationServiceGetServer) Send(m *NotificationsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Get",
			Handler:       _NotificationService_Get_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_670d3602f512c461) }

var fileDescriptor_rpc_670d3602f512c461 = []byte{
	// 1369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x97, 0xeb, 0x6e, 0xdb, 0x36,
	0x14, 0xc7, 0xa1, 0x39, 0x69, 0x9a, 0xe3, 0x5c, 0x99, 0x26, 0xd3, 0xd2, 0xa1, 0xcb, 0x84, 0x0d,
	0x6b, 0x8b, 0x56, 0xee, 0x6c, 0xf7, 0xb2, 0xa5, 0xc5, 0x26, 0xc7, 0xb1, 0xeb, 0x35, 0x70, 0x0d,
	0xda, 0x03, 0x8a, 0xed, 0x93, 0x2c, 0xd3, 0x8e, 0x00, 0x46, 0xd2, 0x44, 0xba, 0x88, 0x9f, 0x62,
	0x2f, 0xb6, 0x87, 0x1a, 0x48, 0xea, 0x42, 0xd9, 0x0e, 0x16, 0x67, 0x1f, 0x94, 0x48, 0x87, 0xe7,
	0xff, 0x17, 0x2f, 0x87, 0x3f, 0xca, 0xb0, 0x19, 0x47, 0x9e, 0x1d, 0xc5, 0x21, 0x0f, 0x51, 0x29,
	0x8e, 0xbc, 0xe3, 0xd3, 0x89, 0xcf, 0x2f, 0xa7, 0x43, 0xdb, 0x0b, 0xaf, 0x2a, 0xd4, 0x9f, 0xb8,
	0x3c, 0xac, 0x7c, 0x8e, 0xa2, 0xe7, 0xee, 0x84, 0x04, 0xbc, 0x12, 0xd1, 0xe9, 0xc4, 0x0f, 0x98,
	0x88, 0x54, 0xae, 0xc2, 0x11, 0xa1, 0x15, 0xd7, 0x93, 0x97, 0x72, 0x58, 0x55, 0x3c, 0x1c, 0x8f,
	0xc4, 0x95, 0x88, 0x3b, 0xab, 0x89, 0xfd, 0x80, 0x93, 0x78, 0xec, 0x7a, 0x84, 0x69, 0xb7, 0x89,
	0xd5, 0x2f, 0x2b, 0x5a, 0x45, 0x8c, 0x78, 0xea, 0x6f, 0x62, 0xf0, 0xd3, 0x6a, 0x06, 0xb4, 0x5a,
	0xa1, 0xd5, 0x3b, 0x4a, 0x6b, 0x15, 0x5a, 0xbb, 0xa3, 0xb4, 0x5e, 0xa1, 0xf5, 0xbb, 0xcd, 0x7c,
	0xe0, 0x72, 0x71, 0xdd, 0x4d, 0xcc, 0x78, 0x20, 0xae, 0x44, 0xfc, 0xe1, 0x36, 0x62, 0xea, 0x07,
	0xd3, 0xeb, 0x5b, 0x2c, 0xdc, 0xe9, 0xaa, 0x66, 0xda, 0xf4, 0x59, 0x7f, 0x97, 0xa1, 0xdc, 0x74,
	0xb9, 0x8b, 0xc9, 0x5f, 0x53, 0xc2, 0x38, 0x7a, 0x05, 0x65, 0xc7, 0xf3, 0x08, 0x63, 0x17, 0x3e,
	0xe3, 0xcc, 0x84, 0x93, 0xd2, 0xe3, 0x72, 0xf5, 0x81, 0x2d, 0xca, 0x55, 0x8b, 0xdb, 0x8e, 0x47,
	0x71, 0xd9, 0xcd, 0x03, 0xe8, 0x57, 0x80, 0x4e, 0xd6, 0x31, 0xf3, 0x81, 0x94, 0x9d, 0xd8, 0x5a,
	0x5f, 0x3b, 0x4b, 0x6e, 0x31, 0xe4, 0x09, 0xe8, 0x15, 0xac, 0xf5, 0x7b, 0x4d, 0x66, 0x1e, 0x4a,
	0xad, 0x65, 0xab, 0xd2, 0xea, 0x13, 0x6f, 0x1a, 0xfb, 0x7c, 0xd6, 0x0b, 0xa9, 0xef, 0xcd, 0x44,
	0x4f, 0x87, 0x2e, 0x23, 0xcc, 0xee, 0xf7, 0x9a, 0x78, 0x8d, 0xf5, 0x9a, 0x0c, 0xbd, 0x80, 0x52,
	0xdf, 0x61, 0xe6, 0x91, 0x94, 0x3d, 0x9a, 0x93, 0x39, 0x8c, 0x85, 0x9e, 0xef, 0x72, 0x3f, 0x0c,
	0x98, 0xdd, 0x77, 0x70, 0x89, 0x39, 0x0c, 0xbd, 0x81, 0x8d, 0xc1, 0x34, 0x08, 0x08, 0x65, 0xe6,
	0x97, 0x05, 0x95, 0x8a, 0x6a, 0x3d, 0x55, 0x01, 0xbc, 0xc1, 0x55, 0x3a, 0x3a, 0x85, 0x72, 0x63,
	0x3c, 0xea, 0x13, 0xc6, 0x84, 0xa1, 0xf9, 0x48, 0xaa, 0xbf, 0xb2, 0xc5, 0x7e, 0xec, 0xfb, 0xc1,
	0x84, 0x92, 0xf7, 0x61, 0xd4, 0x68, 0x35, 0xed, 0x24, 0x03, 0x97, 0x87, 0x79, 0x36, 0x7a, 0x2d,
	0xc5, 0xce, 0x94, 0x5f, 0x7e, 0x20, 0x33, 0x66, 0x7e, 0x23, 0xc5, 0x87, 0x8b, 0xe2, 0x0f, 0x64,
	0x26, 0x85, 0x69, 0x26, 0x7a, 0x0f, 0xbb, 0x8d, 0xf1, 0xe8, 0xdc, 0xbb, 0x0c, 0x5b, 0xd3, 0xc0,
	0x13, 0x63, 0x31, 0x4f, 0x4e, 0x0c, 0xd9, 0xef, 0x05, 0xb1, 0x9e, 0x85, 0x77, 0x87, 0x45, 0x19,
	0x6a, 0xc2, 0x76, 0x23, 0xf6, 0x47, 0x13, 0xd2, 0x0c, 0xaf, 0x5c, 0x3f, 0x60, 0xe6, 0xe3, 0x64,
	0xfc, 0xb4, 0x6a, 0x17, 0x1a, 0x0a, 0x4f, 0x78, 0x7b, 0xa8, 0xb7, 0xa1, 0x27, 0xb0, 0xd6, 0xea,
	0x34, 0x98, 0xf9, 0x24, 0x19, 0x01, 0xad, 0xda, 0x2d, 0x7f, 0x38, 0x70, 0x87, 0x94, 0x88, 0x9b,
	0xf3, 0x80, 0xc7, 0x33, 0xbc, 0x36, 0xee, 0x34, 0x18, 0xaa, 0xc3, 0xfa, 0xa7, 0x33, 0x31, 0x55,
	0x4f, 0xf3, 0x17, 0x89, 0x40, 0x40, 0x3c, 0xde, 0x73, 0xfd, 0x98, 0x15, 0x9e, 0xf0, 0xfa, 0xb5,
	0x48, 0x46, 0x3f, 0xc3, 0x56, 0x9f, 0xbb, 0xdc, 0xf7, 0x70, 0x38, 0xe5, 0x84, 0x99, 0x55, 0x29,
	0x3e, 0xb2, 0x69, 0xcd, 0xd6, 0xe3, 0xb6, 0xfc, 0x87, 0xb7, 0x98, 0x16, 0x43, 0x2f, 0x01, 0x9c,
	0x38, 0x12, 0x7d, 0xf0, 0x09, 0x33, 0x6b, 0x69, 0x17, 0x6b, 0xb6, 0x13, 0x47, 0xaa, 0x8b, 0x49,
	0xf3, 0x0c, 0x83, 0x9b, 0x25, 0xa2, 0x01, 0xa0, 0x5e, 0x1c, 0x5e, 0xcf, 0x9c, 0x38, 0xd2, 0xea,
	0xb8, 0x2e, 0xe5, 0xdf, 0x09, 0xf9, 0x62, 0x6b, 0x5e, 0xc7, 0x62, 0x0b, 0x60, 0x14, 0x2d, 0x64,
	0xa0, 0x26, 0xec, 0xa4, 0x3a, 0xec, 0x06, 0x13, 0xc2, 0xcc, 0x97, 0xd2, 0xf1, 0x6b, 0xdd, 0x51,
	0xb5, 0xd8, 0xf2, 0x9f, 0x74, 0xda, 0x89, 0x0a, 0x2d, 0xe8, 0x19, 0x6c, 0x5e, 0xd4, 0x5b, 0xc4,
	0xe5, 0xd3, 0x98, 0x98, 0x6f, 0xe5, 0xca, 0xef, 0xd8, 0xb4, 0x6e, 0x67, 0x41, 0x86, 0x37, 0x69,
	0x7a, 0x8f, 0x06, 0x70, 0xe8, 0x44, 0x11, 0xf5, 0x3d, 0x59, 0xf5, 0x5d, 0xf7, 0x8a, 0xb0, 0x48,
	0x0e, 0xe6, 0x5d, 0xba, 0x04, 0x75, 0xdb, 0x89, 0xa2, 0xbc, 0xa1, 0xf0, 0x84, 0x0f, 0xdd, 0x65,
	0x62, 0xf4, 0x04, 0xee, 0xf7, 0x79, 0x80, 0xa7, 0x94, 0x30, 0xb3, 0x25, 0x8d, 0xb6, 0x6d, 0xc1,
	0xb3, 0xfe, 0xa0, 0x6b, 0x8b, 0x28, 0xbe, 0xcf, 0x92, 0x66, 0x64, 0xc3, 0x66, 0xd7, 0xe5, 0x6d,
	0x1a, 0x0e, 0x5d, 0x6a, 0xb6, 0x65, 0x77, 0xf7, 0x6c, 0x01, 0xce, 0xae, 0xcb, 0xeb, 0x75, 0x15,
	0xc7, 0x9b, 0x41, 0x9a, 0x82, 0x2a, 0xb0, 0xde, 0xec, 0x3a, 0x03, 0x66, 0xbe, 0x4f, 0xb6, 0x53,
	0x96, 0xdb, 0xec, 0xba, 0xdc, 0x16, 0x7f, 0xce, 0xc2, 0x60, 0xec, 0x4f, 0xf0, 0xfa, 0x48, 0xe4,
	0xa1, 0x8f, 0xb0, 0x7b, 0x21, 0x70, 0xa6, 0x2d, 0x54, 0x4f, 0x4a, 0xbf, 0xd7, 0x81, 0x33, 0x97,
	0xa2, 0x51, 0x67, 0x97, 0x16, 0x9b, 0xd0, 0x45, 0x62, 0xa8, 0x15, 0xce, 0x1f, 0x09, 0x85, 0x68,
	0x4d, 0x19, 0xa9, 0xba, 0xcb, 0x13, 0xf2, 0x2a, 0x52, 0x6e, 0x79, 0x0b, 0x7a, 0x07, 0x65, 0x29,
	0x49, 0x8a, 0xf7, 0x4f, 0xe9, 0xf4, 0x70, 0xce, 0xa9, 0x50, 0xc1, 0x65, 0x9a, 0xe7, 0x5b, 0x3f,
	0xc0, 0x41, 0x37, 0xe4, 0xfe, 0x38, 0x59, 0x83, 0x14, 0xcc, 0x7b, 0x50, 0xf2, 0x47, 0xd7, 0xa6,
	0x71, 0x62, 0x3c, 0xde, 0xc6, 0xe2, 0xd6, 0xda, 0x02, 0x68, 0x13, 0x9e, 0xb4, 0x5b, 0xdb, 0x50,
	0xee, 0x4d, 0x39, 0x26, 0x2c, 0x0a, 0x03, 0x46, 0xc4, 0x63, 0x93, 0xd0, 0xec, 0x71, 0x0f, 0x76,
	0x30, 0x61, 0xb3, 0xc0, 0xcb, 0x22, 0xe7, 0x02, 0xf4, 0x59, 0xc2, 0x3c, 0xf7, 0x8d, 0x5b, 0x72,
	0xdf, 0xfa, 0x1d, 0xf6, 0xf3, 0x89, 0x4d, 0xcd, 0x8a, 0x87, 0x81, 0xb1, 0xfa, 0x61, 0x60, 0xfd,
	0x06, 0x7b, 0x9d, 0x5e, 0x9f, 0x78, 0x02, 0xf3, 0x79, 0x17, 0xd5, 0x01, 0x61, 0xac, 0x76, 0x40,
	0x58, 0x67, 0xb0, 0xab, 0xbc, 0x9c, 0xcc, 0x4a, 0x9e, 0x19, 0x6e, 0xe2, 0x74, 0x8b, 0x33, 0xc3,
	0xb5, 0x3e, 0xc2, 0x81, 0x34, 0x49, 0x4e, 0x84, 0xd4, 0x48, 0x3b, 0x4a, 0x8c, 0x95, 0x8e, 0x12,
	0x0b, 0x03, 0x34, 0xf2, 0xb1, 0x2d, 0x80, 0xd9, 0xb8, 0x03, 0x98, 0xad, 0x37, 0x50, 0x6e, 0xf9,
	0xc3, 0xcc, 0x34, 0xe5, 0xb4, 0xf1, 0x9f, 0x9c, 0xb6, 0x1a, 0x00, 0x9f, 0xb2, 0xda, 0xc8, 0xa9,
	0x6d, 0xac, 0x40, 0x6d, 0xeb, 0x02, 0x76, 0x54, 0x09, 0x67, 0x3e, 0xf3, 0x1c, 0x37, 0x6e, 0xcf,
	0x71, 0xeb, 0x1c, 0xb6, 0x1c, 0xdc, 0xcb, 0xbd, 0x8a, 0x5c, 0x37, 0x6e, 0xc9, 0x75, 0xcb, 0x87,
	0xa3, 0x22, 0x08, 0x32, 0xc3, 0x25, 0x14, 0x31, 0xfe, 0x0f, 0x45, 0x2c, 0x17, 0xf6, 0x15, 0x45,
	0xf4, 0x6e, 0x2f, 0x41, 0x8b, 0x71, 0x67, 0xb4, 0x58, 0x03, 0x38, 0xd0, 0xd0, 0x92, 0xbd, 0x64,
	0x8e, 0x38, 0xc6, 0x8a, 0xc4, 0x19, 0xc3, 0xa1, 0x4e, 0x9c, 0xdc, 0xd7, 0x84, 0x8d, 0x80, 0x5c,
	0xf3, 0x4e, 0xc6, 0x9d, 0xf4, 0x11, 0xd5, 0xa0, 0x14, 0x74, 0xc6, 0xe6, 0x17, 0x92, 0xee, 0xdf,
	0x2e, 0xdd, 0xda, 0x05, 0x88, 0x89, 0xec, 0xaa, 0x0f, 0xfb, 0x62, 0x7f, 0x9e, 0x5d, 0x8a, 0x63,
	0xad, 0x4f, 0xe2, 0xcf, 0xbe, 0x27, 0x8a, 0xb4, 0xd4, 0x9b, 0x72, 0xb4, 0x67, 0x8b, 0xdf, 0x54,
	0xda, 0x97, 0xe8, 0xb1, 0x8a, 0x68, 0x4c, 0x13, 0xa9, 0x4d, 0x42, 0x6f, 0x4c, 0xd5, 0x78, 0x57,
	0x6d, 0xaa, 0x57, 0x29, 0xe6, 0xa5, 0xaf, 0xaa, 0xc0, 0x3d, 0x15, 0x58, 0x62, 0x71, 0x20, 0x23,
	0x45, 0x46, 0x56, 0xff, 0x59, 0x87, 0x1d, 0x91, 0xd4, 0x26, 0x3c, 0xf5, 0x78, 0x06, 0x1b, 0x6d,
	0xc2, 0x1d, 0x8f, 0x32, 0xb4, 0x2b, 0x25, 0x39, 0x82, 0x93, 0x6e, 0xe8, 0x54, 0x7d, 0x03, 0xdb,
	0x6d, 0xc2, 0xb5, 0x93, 0x66, 0x41, 0x73, 0x24, 0x03, 0x8b, 0xd5, 0xf9, 0x0a, 0xb6, 0x84, 0x32,
	0x61, 0xe0, 0x12, 0xe1, 0xa1, 0x12, 0xce, 0x43, 0xb2, 0x0e, 0xe5, 0x4c, 0xe7, 0x2c, 0x91, 0x3d,
	0xd0, 0x64, 0x39, 0x0f, 0xdf, 0xc2, 0x6e, 0xaa, 0x4a, 0x70, 0xb6, 0xa8, 0x34, 0x73, 0xe5, 0x1c,
	0x04, 0x9f, 0xc2, 0xbd, 0x36, 0xe1, 0x8d, 0x65, 0xbd, 0x54, 0x01, 0x0d, 0x74, 0x6a, 0xfe, 0x04,
	0x96, 0x6e, 0x9a, 0x3f, 0x9d, 0x60, 0x2f, 0xe4, 0x2c, 0xa4, 0xb0, 0xb9, 0xd1, 0x5f, 0x43, 0xd7,
	0x8f, 0xb0, 0x29, 0x9a, 0xd5, 0xb7, 0xe0, 0x42, 0x7a, 0xb2, 0xca, 0xc5, 0xdd, 0xf3, 0x5c, 0x2d,
	0x29, 0xee, 0x2d, 0x11, 0xec, 0xab, 0x25, 0xd5, 0x77, 0x74, 0x03, 0x50, 0x9b, 0xf0, 0x39, 0x2e,
	0x2c, 0x2a, 0x1f, 0xca, 0xc0, 0x0d, 0xec, 0x79, 0x2d, 0xc7, 0x95, 0xd1, 0xe2, 0xa6, 0xb2, 0x58,
	0xc4, 0xc9, 0x29, 0xec, 0xa4, 0xc2, 0x9b, 0xc6, 0x68, 0xe6, 0xd2, 0xe2, 0x40, 0xab, 0x83, 0xe2,
	0x97, 0x45, 0x5a, 0xd2, 0xef, 0xa0, 0xd4, 0x26, 0x1c, 0x29, 0xdd, 0x92, 0x4f, 0x8f, 0xe3, 0xe3,
	0x85, 0x96, 0xcc, 0xf3, 0x85, 0x31, 0xbc, 0x27, 0x7f, 0x48, 0xd6, 0xfe, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0x08, 0xb0, 0xc6, 0x07, 0x15, 0x11, 0x00, 0x00,
}
