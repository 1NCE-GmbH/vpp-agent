syntax = "proto3";

package api;

enum ValueState {
    // ValueState_NONEXISTENT is assigned to value that was deleted or has never
    // existed.
    NONEXISTENT = 0;

    // ValueState_CONFIGURED marks value defined by NB and successfully configured.
    CONFIGURED = 1;

    // ValueState_RETRIEVED marks value not managed by NB, instead created
    // automatically or externally in SB.
    RETRIEVED = 2;

    // ValueState_PENDING represents (NB) value that cannot be configured yet
    // due to missing dependencies.
    PENDING = 3;

    // ValueState_INVALID represents (NB) value that will not be configured
    // because it has a logically invalid content as declared by the Validate
    // method of the associated descriptor.
    // The corresponding error and the list of affected fields are stored
    // in the <InvalidValueDetails> structure available via <details> for invalid
    // value.
    INVALID = 5;

    // ValueState_UNIMPLEMENTED marks value received from NB that cannot
    // be configured because there is no registered descriptor associated
    // with it.
    UNIMPLEMENTED = 6;

    // ValueState_FAILED marks (NB) value for which the last executed operation
    // returned an error.
    // The error and the type of the operation which caused the error are stored
    // in the <FailedValueDetails> structure available via <details> for failed
    // value.
    FAILED = 7;
}

message PendingValueDetails {
    repeated string missing_deps = 1;
}

message InvalidValueDetails {
    repeated string fields = 1; // invalid field(s)
    string error = 2;           // error returned by the descriptor's Validate method
}

message FailedValueDetails {
    string error = 1;
    TxnOperation operation = 2;
}

enum TxnOperation {
    UNDEFINED = 0;
    VALIDATE = 1;
    ADD = 2;
    MODIFY = 3;
    DELETE = 4;
    UPDATE = 5;
}

message ValueStatus {
    message Value {
        string key = 1;
        ValueState state = 2;
        oneof details {
            PendingValueDetails pending = 3;
            InvalidValueDetails invalid = 5;
            FailedValueDetails failed = 6;
        };
    }

    Value value = 1;
    repeated Value derived_values = 2;
}