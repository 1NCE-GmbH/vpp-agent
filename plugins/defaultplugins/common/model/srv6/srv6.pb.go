// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: srv6.proto

/*
Package srv6 is a generated protocol buffer package.

It is generated from these files:
	srv6.proto

It has these top-level messages:
	LocalSID
	Policy
	PolicySegment
	Steering
*/
package srv6

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type LocalSID struct {
	FibTableID uint32 `protobuf:"varint,1,opt,name=fibTableID,proto3" json:"fibTableID,omitempty"`
	// Configuration for end functions (all end functions are mutually exclusive)
	BaseEndFunction *LocalSID_End    `protobuf:"bytes,2,opt,name=baseEndFunction" json:"baseEndFunction,omitempty"`
	EndFunctionX    *LocalSID_EndX   `protobuf:"bytes,3,opt,name=endFunctionX" json:"endFunctionX,omitempty"`
	EndFunctionT    *LocalSID_EndT   `protobuf:"bytes,4,opt,name=endFunctionT" json:"endFunctionT,omitempty"`
	EndFunctionDX2  *LocalSID_EndDX2 `protobuf:"bytes,5,opt,name=endFunctionDX2" json:"endFunctionDX2,omitempty"`
	EndFunctionDX4  *LocalSID_EndDX4 `protobuf:"bytes,6,opt,name=endFunctionDX4" json:"endFunctionDX4,omitempty"`
	EndFunctionDX6  *LocalSID_EndDX6 `protobuf:"bytes,7,opt,name=endFunctionDX6" json:"endFunctionDX6,omitempty"`
	EndFunctionDT4  *LocalSID_EndDT4 `protobuf:"bytes,8,opt,name=endFunctionDT4" json:"endFunctionDT4,omitempty"`
	EndFunctionDT6  *LocalSID_EndDT6 `protobuf:"bytes,9,opt,name=endFunctionDT6" json:"endFunctionDT6,omitempty"`
}

func (m *LocalSID) Reset()                    { *m = LocalSID{} }
func (m *LocalSID) String() string            { return proto.CompactTextString(m) }
func (*LocalSID) ProtoMessage()               {}
func (*LocalSID) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0} }

func (m *LocalSID) GetFibTableID() uint32 {
	if m != nil {
		return m.FibTableID
	}
	return 0
}

func (m *LocalSID) GetBaseEndFunction() *LocalSID_End {
	if m != nil {
		return m.BaseEndFunction
	}
	return nil
}

func (m *LocalSID) GetEndFunctionX() *LocalSID_EndX {
	if m != nil {
		return m.EndFunctionX
	}
	return nil
}

func (m *LocalSID) GetEndFunctionT() *LocalSID_EndT {
	if m != nil {
		return m.EndFunctionT
	}
	return nil
}

func (m *LocalSID) GetEndFunctionDX2() *LocalSID_EndDX2 {
	if m != nil {
		return m.EndFunctionDX2
	}
	return nil
}

func (m *LocalSID) GetEndFunctionDX4() *LocalSID_EndDX4 {
	if m != nil {
		return m.EndFunctionDX4
	}
	return nil
}

func (m *LocalSID) GetEndFunctionDX6() *LocalSID_EndDX6 {
	if m != nil {
		return m.EndFunctionDX6
	}
	return nil
}

func (m *LocalSID) GetEndFunctionDT4() *LocalSID_EndDT4 {
	if m != nil {
		return m.EndFunctionDT4
	}
	return nil
}

func (m *LocalSID) GetEndFunctionDT6() *LocalSID_EndDT6 {
	if m != nil {
		return m.EndFunctionDT6
	}
	return nil
}

// End function behavior of simple endpoint
type LocalSID_End struct {
	Psp bool `protobuf:"varint,1,opt,name=psp,proto3" json:"psp,omitempty"`
}

func (m *LocalSID_End) Reset()                    { *m = LocalSID_End{} }
func (m *LocalSID_End) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_End) ProtoMessage()               {}
func (*LocalSID_End) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 0} }

func (m *LocalSID_End) GetPsp() bool {
	if m != nil {
		return m.Psp
	}
	return false
}

// End function behavior of endpoint with Layer-3 cross-connect
type LocalSID_EndX struct {
	Psp               bool   `protobuf:"varint,1,opt,name=psp,proto3" json:"psp,omitempty"`
	OutgoingInterface string `protobuf:"bytes,2,opt,name=outgoingInterface,proto3" json:"outgoingInterface,omitempty"`
	NextHop           string `protobuf:"bytes,3,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
}

func (m *LocalSID_EndX) Reset()                    { *m = LocalSID_EndX{} }
func (m *LocalSID_EndX) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndX) ProtoMessage()               {}
func (*LocalSID_EndX) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 1} }

func (m *LocalSID_EndX) GetPsp() bool {
	if m != nil {
		return m.Psp
	}
	return false
}

func (m *LocalSID_EndX) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *LocalSID_EndX) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

// End function behavior of endpoint with specific IPv6 table lookup
type LocalSID_EndT struct {
	Psp bool `protobuf:"varint,1,opt,name=psp,proto3" json:"psp,omitempty"`
}

func (m *LocalSID_EndT) Reset()                    { *m = LocalSID_EndT{} }
func (m *LocalSID_EndT) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndT) ProtoMessage()               {}
func (*LocalSID_EndT) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 2} }

func (m *LocalSID_EndT) GetPsp() bool {
	if m != nil {
		return m.Psp
	}
	return false
}

// End function nehavior of endpoint with decapulation and Layer-2 cross-connect (or DX2 with egress VLAN rewrite when VLAN notzero - not supported this variant yet)
type LocalSID_EndDX2 struct {
	VlanTag           uint32 `protobuf:"varint,1,opt,name=vlanTag,proto3" json:"vlanTag,omitempty"`
	OutgoingInterface string `protobuf:"bytes,2,opt,name=outgoingInterface,proto3" json:"outgoingInterface,omitempty"`
	NextHop           string `protobuf:"bytes,3,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
}

func (m *LocalSID_EndDX2) Reset()                    { *m = LocalSID_EndDX2{} }
func (m *LocalSID_EndDX2) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndDX2) ProtoMessage()               {}
func (*LocalSID_EndDX2) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 3} }

func (m *LocalSID_EndDX2) GetVlanTag() uint32 {
	if m != nil {
		return m.VlanTag
	}
	return 0
}

func (m *LocalSID_EndDX2) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *LocalSID_EndDX2) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

// End function behavior of endpoint with decapsulation and IPv4 cross-connect
type LocalSID_EndDX4 struct {
	OutgoingInterface string `protobuf:"bytes,1,opt,name=outgoingInterface,proto3" json:"outgoingInterface,omitempty"`
	NextHop           string `protobuf:"bytes,2,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
}

func (m *LocalSID_EndDX4) Reset()                    { *m = LocalSID_EndDX4{} }
func (m *LocalSID_EndDX4) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndDX4) ProtoMessage()               {}
func (*LocalSID_EndDX4) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 4} }

func (m *LocalSID_EndDX4) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *LocalSID_EndDX4) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

// End function behavior of endpoint with decapsulation and IPv6 cross-connect
type LocalSID_EndDX6 struct {
	OutgoingInterface string `protobuf:"bytes,1,opt,name=outgoingInterface,proto3" json:"outgoingInterface,omitempty"`
	NextHop           string `protobuf:"bytes,2,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
}

func (m *LocalSID_EndDX6) Reset()                    { *m = LocalSID_EndDX6{} }
func (m *LocalSID_EndDX6) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndDX6) ProtoMessage()               {}
func (*LocalSID_EndDX6) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 5} }

func (m *LocalSID_EndDX6) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *LocalSID_EndDX6) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

// End function behavior of endpoint with decapsulation and specific IPv4 table lookup
type LocalSID_EndDT4 struct {
}

func (m *LocalSID_EndDT4) Reset()                    { *m = LocalSID_EndDT4{} }
func (m *LocalSID_EndDT4) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndDT4) ProtoMessage()               {}
func (*LocalSID_EndDT4) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 6} }

// End function behavior of endpoint with decapsulation and specific IPv6 table lookup
type LocalSID_EndDT6 struct {
}

func (m *LocalSID_EndDT6) Reset()                    { *m = LocalSID_EndDT6{} }
func (m *LocalSID_EndDT6) String() string            { return proto.CompactTextString(m) }
func (*LocalSID_EndDT6) ProtoMessage()               {}
func (*LocalSID_EndDT6) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{0, 7} }

// Model for SRv6 policy (policy without at least one policy segment is only cached in ligato and not written to VPP)
type Policy struct {
	FibTableID       uint32 `protobuf:"varint,1,opt,name=fibTableID,proto3" json:"fibTableID,omitempty"`
	SrhEncapsulation bool   `protobuf:"varint,2,opt,name=srhEncapsulation,proto3" json:"srhEncapsulation,omitempty"`
	SprayBehaviour   bool   `protobuf:"varint,3,opt,name=sprayBehaviour,proto3" json:"sprayBehaviour,omitempty"`
}

func (m *Policy) Reset()                    { *m = Policy{} }
func (m *Policy) String() string            { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()               {}
func (*Policy) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{1} }

func (m *Policy) GetFibTableID() uint32 {
	if m != nil {
		return m.FibTableID
	}
	return 0
}

func (m *Policy) GetSrhEncapsulation() bool {
	if m != nil {
		return m.SrhEncapsulation
	}
	return false
}

func (m *Policy) GetSprayBehaviour() bool {
	if m != nil {
		return m.SprayBehaviour
	}
	return false
}

// Model for segment of SRv6 policy (etcd key for segment has as prefix the etcd key for policy where it belongs)
type PolicySegment struct {
	Weight   uint32   `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Segments []string `protobuf:"bytes,2,rep,name=segments" json:"segments,omitempty"`
}

func (m *PolicySegment) Reset()                    { *m = PolicySegment{} }
func (m *PolicySegment) String() string            { return proto.CompactTextString(m) }
func (*PolicySegment) ProtoMessage()               {}
func (*PolicySegment) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{2} }

func (m *PolicySegment) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *PolicySegment) GetSegments() []string {
	if m != nil {
		return m.Segments
	}
	return nil
}

// Model for steering traffic to SRv6 policy
type Steering struct {
	PolicyBSID  string `protobuf:"bytes,1,opt,name=policyBSID,proto3" json:"policyBSID,omitempty"`
	PolicyIndex uint32 `protobuf:"varint,2,opt,name=policyIndex,proto3" json:"policyIndex,omitempty"`
	// Traffic configuration (all traffic messages are mutual exclusive)
	L2Traffic *Steering_L2Traffic `protobuf:"bytes,3,opt,name=l2Traffic" json:"l2Traffic,omitempty"`
	L3Traffic *Steering_L3Traffic `protobuf:"bytes,4,opt,name=l3Traffic" json:"l3Traffic,omitempty"`
}

func (m *Steering) Reset()                    { *m = Steering{} }
func (m *Steering) String() string            { return proto.CompactTextString(m) }
func (*Steering) ProtoMessage()               {}
func (*Steering) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{3} }

func (m *Steering) GetPolicyBSID() string {
	if m != nil {
		return m.PolicyBSID
	}
	return ""
}

func (m *Steering) GetPolicyIndex() uint32 {
	if m != nil {
		return m.PolicyIndex
	}
	return 0
}

func (m *Steering) GetL2Traffic() *Steering_L2Traffic {
	if m != nil {
		return m.L2Traffic
	}
	return nil
}

func (m *Steering) GetL3Traffic() *Steering_L3Traffic {
	if m != nil {
		return m.L3Traffic
	}
	return nil
}

type Steering_L2Traffic struct {
	InterfaceName string `protobuf:"bytes,1,opt,name=interfaceName,proto3" json:"interfaceName,omitempty"`
}

func (m *Steering_L2Traffic) Reset()                    { *m = Steering_L2Traffic{} }
func (m *Steering_L2Traffic) String() string            { return proto.CompactTextString(m) }
func (*Steering_L2Traffic) ProtoMessage()               {}
func (*Steering_L2Traffic) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{3, 0} }

func (m *Steering_L2Traffic) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type Steering_L3Traffic struct {
	FibTableID    uint32 `protobuf:"varint,1,opt,name=fibTableID,proto3" json:"fibTableID,omitempty"`
	PrefixAddress string `protobuf:"bytes,2,opt,name=prefixAddress,proto3" json:"prefixAddress,omitempty"`
}

func (m *Steering_L3Traffic) Reset()                    { *m = Steering_L3Traffic{} }
func (m *Steering_L3Traffic) String() string            { return proto.CompactTextString(m) }
func (*Steering_L3Traffic) ProtoMessage()               {}
func (*Steering_L3Traffic) Descriptor() ([]byte, []int) { return fileDescriptorSrv6, []int{3, 1} }

func (m *Steering_L3Traffic) GetFibTableID() uint32 {
	if m != nil {
		return m.FibTableID
	}
	return 0
}

func (m *Steering_L3Traffic) GetPrefixAddress() string {
	if m != nil {
		return m.PrefixAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*LocalSID)(nil), "srv6.LocalSID")
	proto.RegisterType((*LocalSID_End)(nil), "srv6.LocalSID.End")
	proto.RegisterType((*LocalSID_EndX)(nil), "srv6.LocalSID.EndX")
	proto.RegisterType((*LocalSID_EndT)(nil), "srv6.LocalSID.EndT")
	proto.RegisterType((*LocalSID_EndDX2)(nil), "srv6.LocalSID.EndDX2")
	proto.RegisterType((*LocalSID_EndDX4)(nil), "srv6.LocalSID.EndDX4")
	proto.RegisterType((*LocalSID_EndDX6)(nil), "srv6.LocalSID.EndDX6")
	proto.RegisterType((*LocalSID_EndDT4)(nil), "srv6.LocalSID.EndDT4")
	proto.RegisterType((*LocalSID_EndDT6)(nil), "srv6.LocalSID.EndDT6")
	proto.RegisterType((*Policy)(nil), "srv6.Policy")
	proto.RegisterType((*PolicySegment)(nil), "srv6.PolicySegment")
	proto.RegisterType((*Steering)(nil), "srv6.Steering")
	proto.RegisterType((*Steering_L2Traffic)(nil), "srv6.Steering.L2Traffic")
	proto.RegisterType((*Steering_L3Traffic)(nil), "srv6.Steering.L3Traffic")
}

func init() { proto.RegisterFile("srv6.proto", fileDescriptorSrv6) }

var fileDescriptorSrv6 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xc7, 0xd5, 0x0f, 0xda, 0x64, 0x96, 0x2e, 0x8b, 0x11, 0x60, 0xe5, 0x80, 0xaa, 0x6a, 0x85,
	0x2a, 0x84, 0x2a, 0xd1, 0x46, 0xe1, 0x02, 0x07, 0x96, 0x16, 0x51, 0x69, 0x85, 0x16, 0xd7, 0x87,
	0x1e, 0x71, 0x13, 0x37, 0x0d, 0xca, 0x3a, 0x91, 0x9d, 0x96, 0xae, 0xc4, 0xd3, 0xf1, 0x00, 0x3c,
	0x13, 0xaa, 0x93, 0xf4, 0x23, 0x69, 0xb5, 0x1c, 0xf6, 0xe6, 0x19, 0xcf, 0xef, 0xff, 0x8f, 0x33,
	0x63, 0x03, 0x28, 0xb9, 0x72, 0x7a, 0xb1, 0x8c, 0x92, 0x08, 0xd5, 0x37, 0xeb, 0xce, 0xdf, 0x26,
	0x18, 0xd7, 0x91, 0xcb, 0xc2, 0xc9, 0x78, 0x88, 0x5e, 0x01, 0xcc, 0x83, 0x19, 0x65, 0xb3, 0x90,
	0x8f, 0x87, 0xb8, 0xd2, 0xae, 0x74, 0x5b, 0x64, 0x2f, 0x83, 0x3e, 0xc0, 0x93, 0x19, 0x53, 0x7c,
	0x24, 0xbc, 0x2f, 0x4b, 0xe1, 0x26, 0x41, 0x24, 0x70, 0xb5, 0x5d, 0xe9, 0x9e, 0xf5, 0x51, 0x4f,
	0x0b, 0xe7, 0x42, 0xbd, 0x91, 0xf0, 0x48, 0xb1, 0x14, 0xbd, 0x87, 0xc7, 0x7c, 0x17, 0x4e, 0x71,
	0x4d, 0xa3, 0xcf, 0xca, 0xe8, 0x94, 0x1c, 0x14, 0x16, 0x40, 0x8a, 0xeb, 0xa7, 0x40, 0x7a, 0x00,
	0x52, 0xf4, 0x11, 0xce, 0xf7, 0xe2, 0xe1, 0xb4, 0x8f, 0x1f, 0x69, 0xf4, 0x79, 0x19, 0x1d, 0x4e,
	0xfb, 0xa4, 0x50, 0x5c, 0xc2, 0x6d, 0xdc, 0x38, 0x8d, 0xdb, 0x05, 0xdc, 0x2e, 0xe1, 0x0e, 0x6e,
	0x9e, 0xc6, 0x9d, 0x02, 0xee, 0x14, 0x71, 0x6a, 0x63, 0xe3, 0x24, 0x4e, 0x0b, 0xee, 0xb4, 0xe4,
	0x4e, 0x1d, 0x6c, 0x9e, 0xc6, 0x0b, 0xee, 0xd4, 0xb1, 0x5e, 0x42, 0x6d, 0x24, 0x3c, 0x74, 0x01,
	0xb5, 0x58, 0xc5, 0x7a, 0x14, 0x0c, 0xb2, 0x59, 0x5a, 0x3f, 0xa0, 0xbe, 0x69, 0x51, 0x79, 0x07,
	0xbd, 0x85, 0xa7, 0xd1, 0x32, 0xf1, 0xa3, 0x40, 0xf8, 0x63, 0x91, 0x70, 0x39, 0x67, 0x2e, 0xd7,
	0xf3, 0x61, 0x92, 0xf2, 0x06, 0xc2, 0xd0, 0x14, 0x7c, 0x9d, 0x7c, 0x8d, 0x62, 0x3d, 0x08, 0x26,
	0xc9, 0x43, 0x0b, 0x6b, 0x07, 0x7a, 0xc4, 0xfb, 0x27, 0x34, 0xd2, 0x56, 0x6d, 0xe8, 0x55, 0xc8,
	0x04, 0x65, 0x7e, 0x36, 0xa6, 0x79, 0xf8, 0x60, 0x5f, 0x71, 0x93, 0x79, 0xd9, 0xc7, 0x15, 0x2b,
	0xff, 0xa1, 0x58, 0x3d, 0xae, 0xe8, 0x3c, 0x98, 0xa2, 0x91, 0x2a, 0x52, 0x7b, 0xbb, 0x72, 0x3a,
	0xbf, 0xa1, 0x71, 0x13, 0x85, 0x81, 0x7b, 0x77, 0xef, 0x6d, 0x7e, 0x03, 0x17, 0x4a, 0x2e, 0x46,
	0xc2, 0x65, 0xb1, 0x5a, 0x86, 0x6c, 0x7b, 0x9d, 0x0d, 0x52, 0xca, 0xa3, 0xd7, 0x70, 0xae, 0x62,
	0xc9, 0xee, 0xae, 0xf8, 0x82, 0xad, 0x82, 0x68, 0x29, 0xf5, 0xef, 0x32, 0x48, 0x21, 0xdb, 0xf9,
	0x0c, 0xad, 0xd4, 0x7d, 0xc2, 0xfd, 0x5b, 0x2e, 0x12, 0xf4, 0x02, 0x1a, 0xbf, 0x78, 0xe0, 0x2f,
	0x92, 0xec, 0x03, 0xb2, 0x08, 0x59, 0x60, 0xa8, 0xb4, 0x44, 0xe1, 0x6a, 0xbb, 0xd6, 0x35, 0xc9,
	0x36, 0xee, 0xfc, 0xa9, 0x82, 0x31, 0x49, 0x38, 0x97, 0x81, 0xf0, 0x37, 0xa7, 0x88, 0xb5, 0xe2,
	0xd5, 0x24, 0x3b, 0x85, 0x49, 0xf6, 0x32, 0xa8, 0x0d, 0x67, 0x69, 0x34, 0x16, 0x1e, 0x5f, 0xeb,
	0x03, 0xb4, 0xc8, 0x7e, 0x0a, 0x39, 0x60, 0x86, 0x7d, 0x2a, 0xd9, 0x7c, 0x1e, 0xb8, 0xd9, 0xa3,
	0x83, 0xd3, 0x4b, 0x90, 0x9b, 0xf4, 0xae, 0xf3, 0x7d, 0xb2, 0x2b, 0xd5, 0xdc, 0x20, 0xe7, 0xea,
	0xc7, 0xb9, 0xc1, 0x8e, 0xcb, 0x97, 0xd6, 0x3b, 0x30, 0xb7, 0x7a, 0xe8, 0x12, 0x5a, 0x41, 0xde,
	0xc9, 0x6f, 0xec, 0x36, 0x6f, 0xf3, 0x61, 0xd2, 0xfa, 0x0e, 0xe6, 0x56, 0xea, 0xde, 0xbe, 0x5d,
	0x42, 0x2b, 0x96, 0x7c, 0x1e, 0xac, 0x3f, 0x79, 0x9e, 0xe4, 0x4a, 0x65, 0x53, 0x71, 0x98, 0x9c,
	0x35, 0xf4, 0x2b, 0x3f, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x9d, 0x7c, 0x9c, 0xf3, 0x05,
	0x00, 0x00,
}
