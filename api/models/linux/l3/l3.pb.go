// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: linux/l3/l3.proto

package linux_l3 // import "github.com/ligato/vpp-agent/api/models/linux/l3"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type StaticRoute_Scope int32

const (
	StaticRoute_UNDEFINED StaticRoute_Scope = 0
	StaticRoute_GLOBAL    StaticRoute_Scope = 1
	StaticRoute_SITE      StaticRoute_Scope = 2
	StaticRoute_LINK      StaticRoute_Scope = 3
	StaticRoute_HOST      StaticRoute_Scope = 4
)

var StaticRoute_Scope_name = map[int32]string{
	0: "UNDEFINED",
	1: "GLOBAL",
	2: "SITE",
	3: "LINK",
	4: "HOST",
}
var StaticRoute_Scope_value = map[string]int32{
	"UNDEFINED": 0,
	"GLOBAL":    1,
	"SITE":      2,
	"LINK":      3,
	"HOST":      4,
}

func (x StaticRoute_Scope) String() string {
	return proto.EnumName(StaticRoute_Scope_name, int32(x))
}
func (StaticRoute_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_l3_a55ec11e74a3cce4, []int{0, 0}
}

type StaticRoute struct {
	OutgoingInterface    string            `protobuf:"bytes,1,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	Scope                StaticRoute_Scope `protobuf:"varint,2,opt,name=scope,proto3,enum=linux.l3.StaticRoute_Scope" json:"scope,omitempty"`
	DstNetwork           string            `protobuf:"bytes,3,opt,name=dst_network,json=dstNetwork,proto3" json:"dst_network,omitempty"`
	GwAddr               string            `protobuf:"bytes,4,opt,name=gw_addr,json=gwAddr,proto3" json:"gw_addr,omitempty"`
	Metric               uint32            `protobuf:"varint,5,opt,name=metric,proto3" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StaticRoute) Reset()         { *m = StaticRoute{} }
func (m *StaticRoute) String() string { return proto.CompactTextString(m) }
func (*StaticRoute) ProtoMessage()    {}
func (*StaticRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_l3_a55ec11e74a3cce4, []int{0}
}
func (m *StaticRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticRoute.Unmarshal(m, b)
}
func (m *StaticRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticRoute.Marshal(b, m, deterministic)
}
func (dst *StaticRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticRoute.Merge(dst, src)
}
func (m *StaticRoute) XXX_Size() int {
	return xxx_messageInfo_StaticRoute.Size(m)
}
func (m *StaticRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticRoute.DiscardUnknown(m)
}

var xxx_messageInfo_StaticRoute proto.InternalMessageInfo

func (m *StaticRoute) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *StaticRoute) GetScope() StaticRoute_Scope {
	if m != nil {
		return m.Scope
	}
	return StaticRoute_UNDEFINED
}

func (m *StaticRoute) GetDstNetwork() string {
	if m != nil {
		return m.DstNetwork
	}
	return ""
}

func (m *StaticRoute) GetGwAddr() string {
	if m != nil {
		return m.GwAddr
	}
	return ""
}

func (m *StaticRoute) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (*StaticRoute) XXX_MessageName() string {
	return "linux.l3.StaticRoute"
}

type StaticARPEntry struct {
	Interface            string   `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	IpAddress            string   `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	HwAddress            string   `protobuf:"bytes,3,opt,name=hw_address,json=hwAddress,proto3" json:"hw_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaticARPEntry) Reset()         { *m = StaticARPEntry{} }
func (m *StaticARPEntry) String() string { return proto.CompactTextString(m) }
func (*StaticARPEntry) ProtoMessage()    {}
func (*StaticARPEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_l3_a55ec11e74a3cce4, []int{1}
}
func (m *StaticARPEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticARPEntry.Unmarshal(m, b)
}
func (m *StaticARPEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticARPEntry.Marshal(b, m, deterministic)
}
func (dst *StaticARPEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticARPEntry.Merge(dst, src)
}
func (m *StaticARPEntry) XXX_Size() int {
	return xxx_messageInfo_StaticARPEntry.Size(m)
}
func (m *StaticARPEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticARPEntry.DiscardUnknown(m)
}

var xxx_messageInfo_StaticARPEntry proto.InternalMessageInfo

func (m *StaticARPEntry) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *StaticARPEntry) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *StaticARPEntry) GetHwAddress() string {
	if m != nil {
		return m.HwAddress
	}
	return ""
}

func (*StaticARPEntry) XXX_MessageName() string {
	return "linux.l3.StaticARPEntry"
}
func init() {
	proto.RegisterType((*StaticRoute)(nil), "linux.l3.StaticRoute")
	proto.RegisterType((*StaticARPEntry)(nil), "linux.l3.StaticARPEntry")
	proto.RegisterEnum("linux.l3.StaticRoute_Scope", StaticRoute_Scope_name, StaticRoute_Scope_value)
}

func init() { proto.RegisterFile("linux/l3/l3.proto", fileDescriptor_l3_a55ec11e74a3cce4) }

var fileDescriptor_l3_a55ec11e74a3cce4 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x4d, 0xef, 0x93, 0x40,
	0x10, 0xc6, 0xa5, 0xff, 0x16, 0xcb, 0x34, 0x6d, 0xe8, 0x1e, 0x94, 0xf8, 0xda, 0xf4, 0xd4, 0x4b,
	0xd9, 0x28, 0x17, 0x13, 0x13, 0x23, 0x4d, 0x51, 0x89, 0x0d, 0x35, 0x50, 0x2f, 0x5e, 0x08, 0x85,
	0xed, 0x76, 0xe3, 0x96, 0x25, 0xb0, 0x88, 0x9e, 0xfd, 0x72, 0x7e, 0x0f, 0xbf, 0x88, 0x61, 0x29,
	0xda, 0x78, 0x7b, 0xe6, 0xf9, 0xcd, 0xce, 0xce, 0xe4, 0x81, 0x39, 0x67, 0x79, 0xfd, 0x1d, 0x73,
	0x07, 0x73, 0xc7, 0x2e, 0x4a, 0x21, 0x05, 0x1a, 0x2b, 0xcb, 0xe6, 0xce, 0xa3, 0x35, 0x65, 0xf2,
	0x5c, 0x1f, 0xed, 0x54, 0x5c, 0x30, 0x15, 0x54, 0x60, 0xd5, 0x70, 0xac, 0x4f, 0xaa, 0x52, 0x85,
	0x52, 0xdd, 0xc3, 0xe5, 0xcf, 0x01, 0x4c, 0x22, 0x99, 0x48, 0x96, 0x86, 0xa2, 0x96, 0x04, 0xad,
	0x01, 0x89, 0x5a, 0x52, 0xc1, 0x72, 0x1a, 0xb3, 0x5c, 0x92, 0xf2, 0x94, 0xa4, 0xc4, 0xd2, 0x16,
	0xda, 0xca, 0x08, 0xe7, 0x3d, 0xf1, 0x7b, 0x80, 0x5e, 0xc0, 0xa8, 0x4a, 0x45, 0x41, 0xac, 0xc1,
	0x42, 0x5b, 0xcd, 0x5e, 0x3e, 0xb6, 0xfb, 0x3d, 0xec, 0x9b, 0xa1, 0x76, 0xd4, 0xb6, 0x84, 0x5d,
	0x27, 0x7a, 0x0e, 0x93, 0xac, 0x92, 0x71, 0x4e, 0x64, 0x23, 0xca, 0xaf, 0xd6, 0x9d, 0x1a, 0x0d,
	0x59, 0x25, 0x83, 0xce, 0x41, 0x0f, 0xe1, 0x3e, 0x6d, 0xe2, 0x24, 0xcb, 0x4a, 0x6b, 0xa8, 0xa0,
	0x4e, 0x1b, 0x37, 0xcb, 0x4a, 0xf4, 0x00, 0xf4, 0x0b, 0x91, 0x25, 0x4b, 0xad, 0xd1, 0x42, 0x5b,
	0x4d, 0xc3, 0x6b, 0xb5, 0x7c, 0x0b, 0x23, 0xf5, 0x03, 0x9a, 0x82, 0xf1, 0x39, 0xd8, 0x7a, 0xef,
	0xfc, 0xc0, 0xdb, 0x9a, 0xf7, 0x10, 0x80, 0xfe, 0x7e, 0xb7, 0xdf, 0xb8, 0x3b, 0x53, 0x43, 0x63,
	0x18, 0x46, 0xfe, 0xc1, 0x33, 0x07, 0xad, 0xda, 0xf9, 0xc1, 0x47, 0xf3, 0xae, 0x55, 0x1f, 0xf6,
	0xd1, 0xc1, 0x1c, 0x2e, 0x39, 0xcc, 0xba, 0x7d, 0xdd, 0xf0, 0x93, 0x97, 0xcb, 0xf2, 0x07, 0x7a,
	0x02, 0xc6, 0xff, 0xe7, 0xff, 0x33, 0xd0, 0x53, 0x00, 0x56, 0xa8, 0x15, 0x49, 0x55, 0xa9, 0xdb,
	0x5b, 0x5c, 0xb8, 0x9d, 0xd1, 0xe2, 0x73, 0xf3, 0x17, 0x77, 0x17, 0x1a, 0xe7, 0xe6, 0x8a, 0x37,
	0x6f, 0x7e, 0xfd, 0x7e, 0xa6, 0x7d, 0x79, 0x75, 0x13, 0x14, 0x67, 0x34, 0x91, 0x02, 0x7f, 0x2b,
	0x8a, 0x75, 0x42, 0x49, 0x2e, 0x71, 0x52, 0x30, 0x7c, 0x11, 0x19, 0xe1, 0x15, 0xee, 0xc3, 0x7e,
	0xad, 0x44, 0xcc, 0x9d, 0xa3, 0xae, 0xa2, 0x73, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x57, 0xe9,
	0x30, 0x15, 0x08, 0x02, 0x00, 0x00,
}
