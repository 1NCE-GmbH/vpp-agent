// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: datasyncer/datasyncer.proto

package datasyncer // import "github.com/ligato/vpp-agent/api/datasyncer"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import linux "github.com/ligato/vpp-agent/api/models/linux"
import vpp "github.com/ligato/vpp-agent/api/models/vpp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type DataRequest struct {
	Vpp                  *vpp.ConfigData   `protobuf:"bytes,1,opt,name=vpp,proto3" json:"vpp,omitempty"`
	Linux                *linux.ConfigData `protobuf:"bytes,2,opt,name=linux,proto3" json:"linux,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datasyncer_a2fb3a4284e3e222, []int{0}
}
func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (dst *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(dst, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetVpp() *vpp.ConfigData {
	if m != nil {
		return m.Vpp
	}
	return nil
}

func (m *DataRequest) GetLinux() *linux.ConfigData {
	if m != nil {
		return m.Linux
	}
	return nil
}

func (*DataRequest) XXX_MessageName() string {
	return "datasyncer.DataRequest"
}

type PutResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datasyncer_a2fb3a4284e3e222, []int{1}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (dst *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(dst, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (*PutResponse) XXX_MessageName() string {
	return "datasyncer.PutResponse"
}

type DelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelResponse) Reset()         { *m = DelResponse{} }
func (m *DelResponse) String() string { return proto.CompactTextString(m) }
func (*DelResponse) ProtoMessage()    {}
func (*DelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datasyncer_a2fb3a4284e3e222, []int{2}
}
func (m *DelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelResponse.Unmarshal(m, b)
}
func (m *DelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelResponse.Marshal(b, m, deterministic)
}
func (dst *DelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelResponse.Merge(dst, src)
}
func (m *DelResponse) XXX_Size() int {
	return xxx_messageInfo_DelResponse.Size(m)
}
func (m *DelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelResponse proto.InternalMessageInfo

func (*DelResponse) XXX_MessageName() string {
	return "datasyncer.DelResponse"
}

type ResyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResyncResponse) Reset()         { *m = ResyncResponse{} }
func (m *ResyncResponse) String() string { return proto.CompactTextString(m) }
func (*ResyncResponse) ProtoMessage()    {}
func (*ResyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datasyncer_a2fb3a4284e3e222, []int{3}
}
func (m *ResyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResyncResponse.Unmarshal(m, b)
}
func (m *ResyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResyncResponse.Marshal(b, m, deterministic)
}
func (dst *ResyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResyncResponse.Merge(dst, src)
}
func (m *ResyncResponse) XXX_Size() int {
	return xxx_messageInfo_ResyncResponse.Size(m)
}
func (m *ResyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResyncResponse proto.InternalMessageInfo

func (*ResyncResponse) XXX_MessageName() string {
	return "datasyncer.ResyncResponse"
}
func init() {
	proto.RegisterType((*DataRequest)(nil), "datasyncer.DataRequest")
	proto.RegisterType((*PutResponse)(nil), "datasyncer.PutResponse")
	proto.RegisterType((*DelResponse)(nil), "datasyncer.DelResponse")
	proto.RegisterType((*ResyncResponse)(nil), "datasyncer.ResyncResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataSyncerClient is the client API for DataSyncer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataSyncerClient interface {
	Put(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PutResponse, error)
	Del(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DelResponse, error)
	Resync(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*ResyncResponse, error)
}

type dataSyncerClient struct {
	cc *grpc.ClientConn
}

func NewDataSyncerClient(cc *grpc.ClientConn) DataSyncerClient {
	return &dataSyncerClient{cc}
}

func (c *dataSyncerClient) Put(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/datasyncer.DataSyncer/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataSyncerClient) Del(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DelResponse, error) {
	out := new(DelResponse)
	err := c.cc.Invoke(ctx, "/datasyncer.DataSyncer/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataSyncerClient) Resync(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*ResyncResponse, error) {
	out := new(ResyncResponse)
	err := c.cc.Invoke(ctx, "/datasyncer.DataSyncer/Resync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataSyncerServer is the server API for DataSyncer service.
type DataSyncerServer interface {
	Put(context.Context, *DataRequest) (*PutResponse, error)
	Del(context.Context, *DataRequest) (*DelResponse, error)
	Resync(context.Context, *DataRequest) (*ResyncResponse, error)
}

func RegisterDataSyncerServer(s *grpc.Server, srv DataSyncerServer) {
	s.RegisterService(&_DataSyncer_serviceDesc, srv)
}

func _DataSyncer_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataSyncerServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasyncer.DataSyncer/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataSyncerServer).Put(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataSyncer_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataSyncerServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasyncer.DataSyncer/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataSyncerServer).Del(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataSyncer_Resync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataSyncerServer).Resync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasyncer.DataSyncer/Resync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataSyncerServer).Resync(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataSyncer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datasyncer.DataSyncer",
	HandlerType: (*DataSyncerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _DataSyncer_Put_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _DataSyncer_Del_Handler,
		},
		{
			MethodName: "Resync",
			Handler:    _DataSyncer_Resync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datasyncer/datasyncer.proto",
}

func init() {
	proto.RegisterFile("datasyncer/datasyncer.proto", fileDescriptor_datasyncer_a2fb3a4284e3e222)
}

var fileDescriptor_datasyncer_a2fb3a4284e3e222 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x65, 0x2d, 0xf6, 0x30, 0xc5, 0xaf, 0x20, 0xb8, 0xac, 0x20, 0xda, 0x8b, 0x5e, 0xba, 0x0b,
	0x15, 0xf1, 0x50, 0xbc, 0xe8, 0xfe, 0x80, 0xb2, 0x9e, 0xf4, 0x96, 0x6d, 0xa7, 0x31, 0x90, 0x26,
	0xb1, 0x49, 0x8a, 0xfe, 0x38, 0xef, 0xfe, 0x0f, 0xff, 0x88, 0x24, 0xa9, 0x6e, 0x7a, 0x10, 0x3c,
	0xec, 0x32, 0x33, 0xef, 0xbd, 0xd9, 0x37, 0xfb, 0xe0, 0x74, 0x4e, 0x2d, 0x35, 0xef, 0x72, 0x86,
	0xab, 0xaa, 0x2b, 0x4b, 0xbd, 0x52, 0x56, 0x11, 0xe8, 0x26, 0xc5, 0x88, 0x71, 0xfb, 0xe2, 0xda,
	0x72, 0xa6, 0x96, 0x15, 0x53, 0x4c, 0x55, 0x81, 0xd2, 0xba, 0x45, 0xe8, 0x42, 0x13, 0xaa, 0x28,
	0x2d, 0x8e, 0x97, 0x6a, 0x8e, 0xc2, 0x54, 0x6b, 0xad, 0xfd, 0xb3, 0x99, 0xe6, 0x9b, 0xa9, 0xe0,
	0xd2, 0xbd, 0xc5, 0x77, 0x44, 0x86, 0x4f, 0x30, 0xa8, 0xa9, 0xa5, 0x0d, 0xbe, 0x3a, 0x34, 0x96,
	0x5c, 0x40, 0x6f, 0xad, 0x75, 0x9e, 0x9d, 0x67, 0x57, 0x83, 0xf1, 0x41, 0xe9, 0x37, 0x3c, 0x28,
	0xb9, 0xe0, 0x2c, 0x90, 0x3c, 0x46, 0x2e, 0x61, 0x37, 0x2c, 0xc8, 0x77, 0x02, 0xe9, 0xa8, 0x8c,
	0xeb, 0x12, 0x5a, 0xc4, 0x87, 0x7b, 0x30, 0x98, 0x3a, 0xdb, 0xa0, 0xd1, 0x4a, 0x1a, 0xf4, 0x6d,
	0x8d, 0xe2, 0xb7, 0x3d, 0x84, 0xfd, 0x06, 0xfd, 0x8d, 0x3f, 0x93, 0xf1, 0x47, 0x06, 0xe0, 0xf5,
	0x8f, 0xe1, 0x70, 0x72, 0x0b, 0xbd, 0xa9, 0xb3, 0xe4, 0xa4, 0x4c, 0x7e, 0x4f, 0x62, 0xb5, 0xd8,
	0x02, 0x92, 0x0f, 0x79, 0x61, 0x8d, 0xe2, 0x9f, 0xc2, 0xc4, 0x12, 0xb9, 0x83, 0x7e, 0xb4, 0xf4,
	0xb7, 0xb6, 0x48, 0x81, 0x6d, 0xff, 0xf7, 0x93, 0xcf, 0xaf, 0xb3, 0xec, 0xf9, 0x26, 0xc9, 0x4b,
	0x70, 0x46, 0xad, 0xf2, 0x39, 0x8c, 0x28, 0x43, 0x69, 0x2b, 0xaa, 0x79, 0x92, 0xf6, 0xa4, 0x2b,
	0xdb, 0x7e, 0x88, 0xe3, 0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x09, 0x88, 0xe2, 0x98, 0x18, 0x02,
	0x00, 0x00,
}
